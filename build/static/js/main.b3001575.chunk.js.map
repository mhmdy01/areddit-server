{"version":3,"sources":["services/login.js","services/users.js","reducers/notificationReducer.js","reducers/userReducer.js","hooks/index.js","components/Login.js","components/SignUp.js","components/Notifications.js","components/NavMenu.js","components/Welcome.js","components/PostAuthor.js","components/PostDate.js","services/posts.js","reducers/postReducer.js","components/PostReactions.js","components/PostList.js","components/Home.js","components/DeletePost.js","components/PostComments.js","components/Post.js","components/NewPost.js","components/EditPost.js","components/User.js","components/Profile.js","App.js","store.js","index.js"],"names":["loginService","login","credentials","a","axios","post","res","data","baseUrl","authorization","config","setRequestConfig","headers","Authorization","userService","read","userId","get","create","user","setAuthorizationHeader","token","notificationReducer","state","action","type","concat","payload","filter","notification","id","clearNotification","notificationId","createNotification","setNotification","delay","dispatch","setTimeout","userReducer","setUser","useField","useState","value","setValue","onChange","event","target","reset","Login","useDispatch","history","useHistory","username","password","propsWithoutReset","field","Form","onSubmit","preventDefault","loggedUser","msg","push","console","log","errorMsg","response","error","message","setLoggedUser","Group","Label","Control","required","Button","variant","Text","muted","to","SignUp","name","userToAdd","createdUser","createUser","minLength","controlId","Notification","Alert","Notifications","notifications","useSelector","map","notif","NavMenu","Navbar","bg","expand","collapseOnSelect","className","Brand","as","Link","Nav","Toggle","aria-controls","Collapse","size","onClick","Welcome","Jumbotron","PostAuthor","PostDate","createdAtAgo","formatDistanceToNow","parseISO","createdAt","lastModifiedAgo","lastModified","title","postService","readAll","update","put","remove","delete","comment","postId","react","reactions","postReducer","updatedPost","blog","reactionEmoji","thumbsUp","hooray","heart","rocket","eyes","PostReactions","reactionButtons","Object","entries","emoji","postToUpdate","reaction","changedReactions","addReaction","Badge","PostList","posts","sort","b","localeCompare","Card","Body","Title","slice","Subtitle","content","Footer","Home","DeletePost","deletePost","show","setShow","handleClose","Modal","onHide","Header","closeButton","NewComment","inline","addComment","placeholder","Comments","comments","date","PostComments","Post","match","params","find","postToDelete","status","removePost","NewPost","canSave","length","postToAdd","createdPost","addPost","rows","disabled","setTitle","setContent","changedPost","editPost","User","useParams","useEffect","fetchUser","fetchedUser","ListGroup","Item","Profile","Table","striped","bordered","hover","App","cachedUserJSON","window","localStorage","getItem","cachedUser","JSON","parse","getCachedUser","setItem","stringify","fetchedPosts","exact","path","component","EditPost","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3001575.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst login = async (credentials) => {\r\n  const res = await axios.post(baseUrl, credentials);\r\n  return res.data;\r\n};\r\n\r\nconst loginService = {\r\n  login,\r\n};\r\n\r\nexport default loginService;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/users\";\r\n\r\nlet authorization = \"\";\r\nlet config = null;\r\nconst setAuthorizationHeader = (token) => {\r\n  authorization = `Bearer ${token}`;\r\n  setRequestConfig(authorization);\r\n};\r\nconst setRequestConfig = (authorization) => {\r\n  config = {\r\n    headers: {\r\n      Authorization: authorization,\r\n    },\r\n  };\r\n};\r\n\r\nconst read = async (userId) => {\r\n  const res = await axios.get(`${baseUrl}/${userId}`, config);\r\n  return res.data;\r\n};\r\n\r\nconst create = async (user) => {\r\n  const res = await axios.post(baseUrl, user);\r\n  return res.data;\r\n};\r\n\r\nconst userService = {\r\n  read,\r\n  create,\r\n  setAuthorizationHeader,\r\n};\r\n\r\nexport default userService;\r\n","const notificationReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_NOTIFICATION\":\r\n      return state.concat(action.payload);\r\n    case \"CLEAR_NOTIFICATION\":\r\n      return state.filter((notification) => notification.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default notificationReducer;\r\n\r\nconst clearNotification = (notificationId) => {\r\n  return {\r\n    type: \"CLEAR_NOTIFICATION\",\r\n    payload: notificationId,\r\n  };\r\n};\r\nconst createNotification = (notification) => {\r\n  return {\r\n    type: \"CREATE_NOTIFICATION\",\r\n    payload: notification,\r\n  };\r\n};\r\n\r\nexport const setNotification = (notification, delay = 3) => {\r\n  return (dispatch) => {\r\n    const id = setTimeout(() => {\r\n      dispatch(clearNotification(id));\r\n    }, delay * 1000);\r\n\r\n    dispatch(createNotification({ ...notification, id }));\r\n  };\r\n};\r\n","import loginService from \"../services/login\";\r\nimport userService from \"../services/users\";\r\nimport { setNotification } from \"./notificationReducer\";\r\n\r\nconst userReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default userReducer;\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: \"SET_USER\",\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const setLoggedUser = (credentials, history) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const loggedUser = await loginService.login(credentials);\r\n      dispatch(setUser(loggedUser));\r\n      dispatch(\r\n        setNotification({\r\n          type: \"success\",\r\n          msg: `${loggedUser.username} logged in`,\r\n        })\r\n      );\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log({ ...error });\r\n      const errorMsg = error.response\r\n        ? error.response.data\r\n          ? error.response.data.error\r\n          : error.message\r\n        : error.message;\r\n      dispatch(\r\n        setNotification({\r\n          type: \"error\",\r\n          msg: errorMsg,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const createUser = (userToAdd, history) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const createdUser = await userService.create(userToAdd);\r\n      dispatch(\r\n        setNotification({\r\n          type: \"success\",\r\n          msg: `created user: ${createdUser.username}... redirect to login`,\r\n        })\r\n      );\r\n      history.push(\"/login\");\r\n    } catch (error) {\r\n      console.log({ ...error });\r\n      const errorMsg = error.response\r\n        ? error.response.data\r\n          ? error.response.data.error\r\n          : error.message\r\n        : error.message;\r\n      dispatch(\r\n        setNotification({\r\n          type: \"error\",\r\n          msg: errorMsg,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLoggedUser } from \"../reducers/userReducer\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useField } from \"../hooks\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const username = useField(\"text\");\r\n  const password = useField(\"password\");\r\n  const propsWithoutReset = (field) => {\r\n    const { reset, ...others } = field;\r\n    return others;\r\n  };\r\n\r\n  const login = (event) => {\r\n    event.preventDefault();\r\n    const credentials = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n\r\n    dispatch(setLoggedUser(credentials, history));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={login}>\r\n        <Form.Group>\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control {...propsWithoutReset(username)} required />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control {...propsWithoutReset(password)} required />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n        <Form.Text muted>\r\n          Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n        </Form.Text>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { createUser } from \"../reducers/userReducer\";\r\nimport { useField } from \"../hooks\";\r\n\r\nconst SignUp = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const username = useField(\"text\");\r\n  const name = useField(\"text\");\r\n  const password = useField(\"password\");\r\n  const propsWithoutReset = (field) => {\r\n    const { reset, ...others } = field;\r\n    return others;\r\n  };\r\n\r\n  const signup = (event) => {\r\n    event.preventDefault();\r\n    const userToAdd = {\r\n      username: username.value,\r\n      name: name.value,\r\n      password: password.value,\r\n    };\r\n\r\n    dispatch(createUser(userToAdd, history));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={signup}>\r\n        <Form.Group>\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            {...propsWithoutReset(username)}\r\n            required\r\n            minLength={3}\r\n          />\r\n          <Form.Text muted>Must be 3 characters or more.</Form.Text>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control {...propsWithoutReset(name)} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            {...propsWithoutReset(password)}\r\n            required\r\n            minLength={3}\r\n          />\r\n          <Form.Text muted>Must be 3 characters or more.</Form.Text>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Sign Up\r\n        </Button>\r\n        <Form.Text muted>\r\n          Already have an account? <Link to=\"/login\">Log In</Link>\r\n        </Form.Text>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  const variant = notification.type === \"success\" ? \"success\" : \"danger\";\r\n\r\n  return (\r\n    <div>\r\n      <Alert variant={variant}>{notification.msg}</Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notifications = () => {\r\n  const notifications = useSelector(({ notifications }) => notifications);\r\n\r\n  return (\r\n    <div>\r\n      {notifications.map((notif) => (\r\n        <Notification key={notif.id} notification={notif} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { setUser } from \"../reducers/userReducer\";\r\n\r\nconst NavMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const history = useHistory();\r\n\r\n  const logOut = () => {\r\n    console.log(\"loggin out\");\r\n    dispatch(setUser(null));\r\n    // dispatch({\r\n    //   type: \"INIT_BLOGS\",\r\n    //   payload: [],\r\n    // });\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        expand=\"lg\"\r\n        collapseOnSelect\r\n        className=\"ps-3 pe-3\"\r\n      >\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          Areddit\r\n        </Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          {user !== null && (\r\n            <Nav.Link as={Link} to=\"/create\">\r\n              New Post\r\n            </Nav.Link>\r\n          )}\r\n        </Nav>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n          <Nav className=\"ml-auto\">\r\n            {user === null && (\r\n              <>\r\n                <Nav.Link as={Link} to=\"/login\">\r\n                  Login\r\n                </Nav.Link>\r\n\r\n                <Nav.Link as={Link} to=\"/signup\">\r\n                  Signup\r\n                </Nav.Link>\r\n              </>\r\n            )}\r\n\r\n            {user !== null && (\r\n              <Navbar.Text>\r\n                Welcome: <Link to=\"/profile\">{user.username}</Link>{\" \"}\r\n                <Button variant=\"primary\" size=\"sm\" onClick={logOut}>\r\n                  Log out\r\n                </Button>\r\n              </Navbar.Text>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Welcome = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h2>Welcome to Areddit.</h2>\r\n        <p>A social media app built using modren JavaScript</p>\r\n        <p>\r\n          <Button variant=\"primary\" as={Link} to=\"/signup\">\r\n            Sign Up\r\n          </Button>\r\n        </p>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostAuthor = ({ post }) => {\r\n  return (\r\n    <span>\r\n      posted by{\" \"}\r\n      <Link to={`/users/${post.user.id}`}>\r\n        {post.user.name || post.user.username}\r\n      </Link>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default PostAuthor;\r\n","import React from \"react\";\r\nimport { parseISO, formatDistanceToNow } from \"date-fns\";\r\n\r\nconst PostDate = ({ post }) => {\r\n  const createdAtAgo = formatDistanceToNow(parseISO(post.createdAt));\r\n  const lastModifiedAgo = formatDistanceToNow(parseISO(post.lastModified));\r\n\r\n  return (\r\n    <span title={`${post.createdAt}`}>\r\n      <em>\r\n        {createdAtAgo} ago (last modified: {lastModifiedAgo} ago)\r\n      </em>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default PostDate;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/posts\";\r\n\r\nlet authorization = \"\";\r\nlet config = null;\r\nconst setAuthorizationHeader = (token) => {\r\n  authorization = `Bearer ${token}`;\r\n  setRequestConfig(authorization);\r\n};\r\nconst setRequestConfig = (authorization) => {\r\n  config = {\r\n    headers: {\r\n      Authorization: authorization,\r\n    },\r\n  };\r\n};\r\n\r\nconst readAll = async () => {\r\n  const res = await axios.get(baseUrl, config);\r\n  return res.data;\r\n};\r\n\r\nconst create = async (post) => {\r\n  const res = await axios.post(baseUrl, post, config);\r\n  return res.data;\r\n};\r\n\r\nconst update = async (post) => {\r\n  const res = await axios.put(`${baseUrl}/${post.id}`, post, config);\r\n  return res.data;\r\n};\r\n\r\nconst remove = async (post) => {\r\n  const res = await axios.delete(`${baseUrl}/${post.id}`, config);\r\n  return res.data;\r\n};\r\n\r\nconst comment = async (postId, comment) => {\r\n  const res = await axios.post(\r\n    `${baseUrl}/${postId}/comments`,\r\n    comment,\r\n    config\r\n  );\r\n  return res.data;\r\n};\r\n\r\nconst react = async (postId, reactions) => {\r\n  const res = await axios.put(\r\n    `${baseUrl}/${postId}/reactions`,\r\n    reactions,\r\n    config\r\n  );\r\n  return res.data;\r\n};\r\n\r\nconst postService = {\r\n  readAll,\r\n  create,\r\n  update,\r\n  remove,\r\n  comment,\r\n  react,\r\n  setAuthorizationHeader,\r\n};\r\n\r\nexport default postService;\r\n","import postService from \"../services/posts\";\r\nimport { setNotification } from \"./notificationReducer\";\r\n\r\nconst postReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_POSTS\":\r\n      return action.payload;\r\n    case \"ADD_POST\":\r\n      return [...state, action.payload];\r\n    case \"REMOVE_POST\":\r\n      return state.filter((post) => post.id !== action.payload.id);\r\n    case \"EDIT_POST\":\r\n      const updatedPost = action.payload;\r\n      return state.map((blog) =>\r\n        blog.id === updatedPost.id ? updatedPost : blog\r\n      );\r\n    case \"ADD_COMMENT\":\r\n      return state.map((post) =>\r\n        post.id === action.payload.id ? action.payload : post\r\n      );\r\n    case \"ADD_REACTION\":\r\n      return state.map((post) =>\r\n        post.id === action.payload.id ? action.payload : post\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default postReducer;\r\n\r\nexport const initPosts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const fetchedPosts = await postService.readAll();\r\n      dispatch({\r\n        type: \"INIT_POSTS\",\r\n        payload: fetchedPosts,\r\n      });\r\n    } catch (error) {\r\n      console.log({ ...error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addPost = (postToAdd, history) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const createdPost = await postService.create(postToAdd);\r\n      dispatch({\r\n        type: \"ADD_POST\",\r\n        payload: createdPost,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log({ ...error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const removePost = (postToDelete, history) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await postService.remove(postToDelete);\r\n      dispatch({\r\n        type: \"REMOVE_POST\",\r\n        payload: postToDelete,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log({ ...error });\r\n      let errorMsg = error.response\r\n        ? error.response.data\r\n          ? error.response.data.error\r\n          : error.message\r\n        : error.message;\r\n      if (error.response.status === 404) {\r\n        errorMsg = `error: post (${postToDelete.title.slice(\r\n          0,\r\n          50\r\n        )}) doesn't exist on server`;\r\n        dispatch({\r\n          type: \"REMOVE_POST\",\r\n          payload: postToDelete,\r\n        });\r\n        history.push(\"/\");\r\n      }\r\n      dispatch(\r\n        setNotification({\r\n          type: \"error\",\r\n          msg: errorMsg,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const editPost = (changedPost, history) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const updatedPost = await postService.update(changedPost);\r\n      dispatch({\r\n        type: \"EDIT_POST\",\r\n        payload: updatedPost,\r\n      });\r\n      history.push(`/posts/${updatedPost.id}`);\r\n    } catch (error) {\r\n      console.log({ ...error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addComment = (postToUpdate, comment) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const updatedPost = await postService.comment(postToUpdate.id, {\r\n        content: comment,\r\n      });\r\n      dispatch({\r\n        type: \"ADD_COMMENT\",\r\n        payload: updatedPost,\r\n      });\r\n    } catch (error) {\r\n      console.log({ ...error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addReaction = (postToUpdate, reaction) => {\r\n  const changedReactions = {\r\n    ...postToUpdate.reactions,\r\n    [reaction]: postToUpdate.reactions[reaction] + 1,\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      // console.log(\r\n      //   \"adding reaction\",\r\n      //   postToUpdate.reactions,\r\n      //   reaction,\r\n      //   changedReactions\r\n      // );\r\n      // return;\r\n      const updatedPost = await postService.react(\r\n        postToUpdate.id,\r\n        changedReactions\r\n      );\r\n      dispatch({\r\n        type: \"ADD_REACTION\",\r\n        payload: updatedPost,\r\n      });\r\n    } catch (error) {\r\n      console.log({ ...error });\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { addReaction } from \"../reducers/postReducer\";\r\n\r\nconst reactionEmoji = {\r\n  thumbsUp: \"👍\",\r\n  hooray: \"🎉\",\r\n  heart: \"❤️\",\r\n  rocket: \"🚀\",\r\n  eyes: \"👀\",\r\n};\r\n\r\nconst PostReactions = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const reactionButtons = Object.entries(reactionEmoji).map(([name, emoji]) => {\r\n    return (\r\n      <Button\r\n        variant=\"light\"\r\n        key={name}\r\n        className=\"mt-2 mr-2\"\r\n        onClick={() => {\r\n          dispatch(addReaction(post, name));\r\n        }}\r\n      >\r\n        {emoji}\r\n        <Badge variant=\"light\">{post.reactions[name]}</Badge>\r\n      </Button>\r\n    );\r\n  });\r\n\r\n  return <div>{reactionButtons}</div>;\r\n};\r\n\r\nexport default PostReactions;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PostAuthor from \"./PostAuthor\";\r\nimport PostDate from \"./PostDate\";\r\nimport PostReactions from \"./PostReactions\";\r\n\r\nconst PostList = () => {\r\n  const posts = useSelector(({ posts }) => {\r\n    // sort by date (newest first)\r\n    return [...posts].sort((a, b) => b.createdAt.localeCompare(a.createdAt));\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {posts.map((post) => (\r\n          <Card key={post.id}>\r\n            <Card.Body>\r\n              <Card.Title>{post.title.slice(0, 50)}</Card.Title>\r\n              <Card.Subtitle className=\"mb-2 text-muted\">\r\n                <PostAuthor post={post} /> <PostDate post={post} />\r\n              </Card.Subtitle>\r\n              <Card.Text>{post.content.slice(0, 50)}</Card.Text>\r\n              <PostReactions post={post} />\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button variant=\"primary\" as={Link} to={`/posts/${post.id}`}>\r\n                Read more\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\nimport PostList from \"./PostList\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h2>Posts</h2>\r\n      <PostList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst DeletePost = ({ post, deletePost }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleDelete = () => {\r\n    deletePost();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"danger\" onClick={handleShow}>\r\n        delete\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Post</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Delete Post ({post.title.slice(0, 50)})?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={handleDelete}>\r\n            Delete\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeletePost;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { addComment } from \"../reducers/postReducer\";\r\nimport { useField } from \"../hooks\";\r\n\r\nconst NewComment = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const comment = useField(\"text\");\r\n  const propsWithoutReset = (field) => {\r\n    const { reset, ...others } = field;\r\n    return others;\r\n  };\r\n\r\n  const createComment = (event) => {\r\n    event.preventDefault();\r\n    dispatch(addComment(post, comment.value));\r\n    comment.reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form inline onSubmit={createComment}>\r\n        <Form.Control\r\n          className=\"mb-2 mr-sm-2\"\r\n          {...propsWithoutReset(comment)}\r\n          placeholder=\"type your comment\"\r\n          required\r\n        />\r\n        <Button variant=\"secondary\">comment</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comments = ({ post }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {post.comments.map((comment) => (\r\n          <li key={comment.date}>{comment.content}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostComments = ({ post }) => {\r\n  return (\r\n    <div>\r\n      <h3>Leave a comment</h3>\r\n      <NewComment post={post} />\r\n      <Comments post={post} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostComments;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { removePost } from \"../reducers/postReducer\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PostAuthor from \"./PostAuthor\";\r\nimport PostDate from \"./PostDate\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport PostComments from \"./PostComments\";\r\nimport PostReactions from \"./PostReactions\";\r\n\r\nconst Post = ({ history, match }) => {\r\n  const { id: postId } = match.params;\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(({ user }) => user);\r\n  const posts = useSelector(({ posts }) => posts);\r\n  const post = posts.find((post) => post.id === postId);\r\n  if (!post) {\r\n    return null;\r\n  }\r\n\r\n  const deletePost = () => {\r\n    dispatch(removePost(post, history));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h2>{post.title}</h2>\r\n        <div>\r\n          <PostAuthor post={post} /> <PostDate post={post} />\r\n        </div>\r\n        <p>{post.content}</p>\r\n        <div>\r\n          {user.username === post.user.username && (\r\n            <>\r\n              <Button\r\n                className=\"mr-2\"\r\n                variant=\"primary\"\r\n                as={Link}\r\n                to={`/posts/${post.id}/edit`}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <DeletePost post={post} deletePost={deletePost} />\r\n            </>\r\n          )}\r\n        </div>\r\n        <PostReactions post={post} />\r\n      </Jumbotron>\r\n      <PostComments post={post} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { addPost } from \"../reducers/postReducer\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useField } from \"../hooks\";\r\n\r\nconst NewPost = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const title = useField(\"text\");\r\n  const content = useField(\"text\");\r\n\r\n  const createPost = (event) => {\r\n    event.preventDefault();\r\n    const postToAdd = {\r\n      title: title.value,\r\n      content: content.value,\r\n    };\r\n    dispatch(addPost(postToAdd, history));\r\n    // title.reset();\r\n    // content.reset();\r\n  };\r\n\r\n  const propsWithoutReset = (field) => {\r\n    const { reset, ...others } = field;\r\n    return others;\r\n  };\r\n\r\n  const canSave =\r\n    title.value &&\r\n    content.value &&\r\n    title.value.length >= 3 &&\r\n    content.value.length >= 3;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add New Post</h2>\r\n      <Form onSubmit={createPost}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            className=\"mb-2 mr-sm-2\"\r\n            {...propsWithoutReset(title)}\r\n            placeholder=\"title\"\r\n            required\r\n            minLength={3}\r\n          />\r\n          <Form.Text className=\"text-muted\">3 characters or more</Form.Text>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            className=\"mb-2 mr-sm-2\"\r\n            rows={3}\r\n            {...propsWithoutReset(content)}\r\n            placeholder=\"content\"\r\n            required\r\n            minLength={3}\r\n          />\r\n          <Form.Text className=\"text-muted\">3 characters or more</Form.Text>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" className=\"mb-2 mr-2\" disabled={!canSave}>\r\n          Add\r\n        </Button>\r\n        <Button variant=\"danger\" className=\"mb-2 mr-2\" as={Link} to=\"/\">\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { editPost } from \"../reducers/postReducer\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst NewPost = ({ match, history }) => {\r\n  const { id: postId } = match.params;\r\n\r\n  const dispatch = useDispatch();\r\n  const postToUpdate = useSelector(({ posts }) => {\r\n    return posts.find((post) => post.id === postId);\r\n  });\r\n\r\n  const [title, setTitle] = useState(postToUpdate.title);\r\n  const [content, setContent] = useState(postToUpdate.content);\r\n  const updateTitle = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n  const updateContent = (event) => {\r\n    setContent(event.target.value);\r\n  };\r\n\r\n  if (!postToUpdate) {\r\n    return <h1>NO POSTS WERE FOUND</h1>;\r\n  }\r\n\r\n  const updatePost = (event) => {\r\n    event.preventDefault();\r\n    const changedPost = {\r\n      ...postToUpdate,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    dispatch(editPost(changedPost, history));\r\n  };\r\n\r\n  const canSave = title && content && title.length >= 3 && content.length >= 3;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Post</h2>\r\n      <Form onSubmit={updatePost}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            className=\"mb-2 mr-sm-2\"\r\n            value={title}\r\n            onChange={updateTitle}\r\n            placeholder=\"title\"\r\n            required\r\n            minLength={3}\r\n          />\r\n          <Form.Text className=\"text-muted\">3 characters or more</Form.Text>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            className=\"mb-2 mr-sm-2\"\r\n            rows={3}\r\n            value={content}\r\n            onChange={updateContent}\r\n            placeholder=\"content\"\r\n            required\r\n            minLength={3}\r\n          />\r\n          <Form.Text className=\"text-muted\">3 characters or more</Form.Text>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" className=\"mb-2 mr-2\" disabled={!canSave}>\r\n          Save\r\n        </Button>\r\n        <Button\r\n          variant=\"danger\"\r\n          className=\"mb-2 mr-2\"\r\n          as={Link}\r\n          to={`/posts/${postToUpdate.id}`}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport userService from \"../services/users\";\r\n\r\nconst User = () => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const userId = useParams().id;\r\n\r\n  useEffect(() => {\r\n    // return;\r\n    const fetchUser = async () => {\r\n      const fetchedUser = await userService.read(userId);\r\n      setUser(fetchedUser);\r\n    };\r\n    try {\r\n      fetchUser();\r\n    } catch (error) {\r\n      console.log({ ...error });\r\n    }\r\n  }, [userId]);\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name || user.username}</h2>\r\n      <h3>posts</h3>\r\n      <ListGroup>\r\n        {user.posts.map((post) => (\r\n          <ListGroup.Item key={post.id}>\r\n            <Link to={`/posts/${post.id}`}>{post.title}</Link>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst Profile = () => {\r\n  const { name, username } = useSelector(({ user }) => user);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Profile</h2>\r\n      <Table striped bordered hover>\r\n        <tbody>\r\n          <tr>\r\n            <th>name</th>\r\n            <td>{name}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>username</th>\r\n            <td>{username}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Notifications from \"./components/Notifications\";\nimport NavMenu from \"./components/NavMenu\";\nimport Welcome from \"./components/Welcome\";\nimport Home from \"./components/Home\";\nimport Post from \"./components/Post\";\nimport NewPost from \"./components/NewPost\";\nimport EditPost from \"./components/EditPost\";\nimport User from \"./components/User\";\nimport Profile from \"./components/Profile\";\nimport { initPosts } from \"./reducers/postReducer\";\nimport { setUser } from \"./reducers/userReducer\";\nimport postService from \"./services/posts\";\nimport userService from \"./services/users\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    const getCachedUser = () => {\n      const cachedUserJSON = window.localStorage.getItem(\"loggedUser\");\n      if (cachedUserJSON) {\n        const cachedUser = JSON.parse(cachedUserJSON);\n        dispatch(setUser(cachedUser));\n      }\n    };\n    getCachedUser();\n  }, [dispatch]);\n\n  useEffect(() => {\n    const setCachedUser = () => {\n      window.localStorage.setItem(\"loggedUser\", JSON.stringify(user));\n    };\n    setCachedUser();\n\n    if (!user) {\n      return;\n    }\n    userService.setAuthorizationHeader(user.token);\n    postService.setAuthorizationHeader(user.token);\n    dispatch(initPosts());\n  }, [user, dispatch]);\n\n  return (\n    <div className=\"container-fluid\">\n      <Router>\n        <Notifications />\n        <NavMenu />\n        <Switch>\n          <Route exact path=\"/\">\n            {user === null ? <Welcome /> : <Home />}\n          </Route>\n          <Route exact path=\"/login\">\n            {user !== null ? <Redirect to=\"/\" /> : <Login />}\n          </Route>\n          <Route exact path=\"/signup\">\n            {user !== null ? <Redirect to=\"/\" /> : <SignUp />}\n          </Route>\n          <Route exact path=\"/profile\">\n            {user === null ? <Redirect to=\"/\" /> : <Profile />}\n          </Route>\n          <Route exact path=\"/users/:id\">\n            {user === null ? <Redirect to=\"/\" /> : <User />}\n          </Route>\n          <Route exact path=\"/create\">\n            {user === null ? <Redirect to=\"/\" /> : <NewPost />}\n          </Route>\n          {/* TODO: limit access to routes below (ie. same as routes above) */}\n          <Route exact path=\"/posts/:id\" component={Post} />\n          <Route exact path=\"/posts/:id/edit\" component={EditPost} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport postReducer from \"./reducers/postReducer\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport notificationReducer from \"./reducers/notificationReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  posts: postReducer,\r\n  user: userReducer,\r\n  notifications: notificationReducer,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n// debugging\r\n// console.log(store.getState());\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}